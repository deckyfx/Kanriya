@using Kanriya.Server.Blazor.Services
@using Kanriya.Server.Constants
@using Microsoft.AspNetCore.Components.Authorization
@inject BlazorLocalizationService L
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="nav-menu">
    <div class="nav-header">
        <h3>@L.T("Blazor.console.navigation.appName")</h3>
    </div>
    
    <nav class="nav-items">
        <div class="nav-item">
            <NavLink class="nav-link" href="/console" Match="NavLinkMatch.All">
                <span class="nav-icon">üè†</span>
                <span class="nav-text">@L.T("Blazor.console.navigation.dashboard")</span>
            </NavLink>
        </div>
        
        <div class="nav-item">
            <NavLink class="nav-link" href="/console/profile">
                <span class="nav-icon">üë§</span>
                <span class="nav-text">@L.T("Blazor.console.navigation.profile")</span>
            </NavLink>
        </div>
        
        @if (isSuperAdmin && isPrincipalContext)
        {
            <div class="nav-separator"></div>
            <div class="nav-item">
                <NavLink class="nav-link admin-link" href="/admin" Match="NavLinkMatch.All">
                    <span class="nav-icon">üõ°Ô∏è</span>
                    <span class="nav-text">@L.T("Blazor.console.navigation.adminConsole")</span>
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool isSuperAdmin = false;
    private bool isPrincipalContext = true;
    
    protected override async Task OnInitializedAsync()
    {
        L.Initialize();
        
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var tokenType = authState.User.FindFirst("token_type")?.Value;
        
        // Check if user is in principal context (not brand context)
        isPrincipalContext = string.IsNullOrEmpty(tokenType) || tokenType != "BRAND";
        
        // Check if user has SuperAdmin role
        isSuperAdmin = authState.User.IsInRole(UserRoles.SuperAdmin);
        
        StateHasChanged();
    }
}

<style>
    .nav-menu {
        background: #2c3e50;
        color: white;
        height: 100%;
        display: flex;
        flex-direction: column;
    }
    
    .nav-header {
        padding: 1.5rem 1rem;
        border-bottom: 1px solid rgba(255,255,255,0.1);
    }
    
    .nav-header h3 {
        margin: 0;
        font-size: 1.5rem;
        font-weight: 600;
    }
    
    .nav-items {
        padding: 1rem 0;
        flex: 1;
    }
    
    .nav-item {
        margin-bottom: 0.25rem;
    }
    
    .nav-link {
        display: flex;
        align-items: center;
        padding: 0.75rem 1rem;
        color: rgba(255,255,255,0.8);
        text-decoration: none;
        transition: all 0.2s;
    }
    
    .nav-link:hover {
        background: rgba(255,255,255,0.1);
        color: white;
    }
    
    .nav-link.active {
        background: #667eea;
        color: white;
    }
    
    .nav-icon {
        font-size: 1.25rem;
        margin-right: 0.75rem;
        width: 1.5rem;
        text-align: center;
    }
    
    .nav-text {
        font-size: 0.95rem;
    }
    
    .nav-separator {
        height: 1px;
        background: rgba(255,255,255,0.2);
        margin: 1rem 1rem;
    }
    
    .admin-link {
        background: rgba(220, 38, 38, 0.1);
        border-left: 3px solid transparent;
    }
    
    .admin-link:hover {
        background: rgba(220, 38, 38, 0.2) !important;
        border-left: 3px solid #dc2626;
    }
    
    .admin-link.active {
        background: #dc2626 !important;
        border-left: 3px solid #dc2626;
    }
</style>